<Window x:Class="PlanOrd.View.MaquetteWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PlanOrd.View"
        xmlns:resources="clr-namespace:PlanOrd.View.Resources"
        mc:Ignorable="d"
        Title="PlanOrd"
        MinWidth="960" MinHeight="660"
        WindowState="Maximized"
        x:Name="RootWindow">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="BorderThickness" Value="7" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="35"
            CornerRadius="0"
            GlassFrameThickness="0"
            NonClientFrameEdges="None"
            ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/PlanOrdMenuBarButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <Border BorderBrush="#FF0079CB" Background="#FF2D2D30" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,2">
            <DockPanel>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Top">
                    <Button Content="&#xE949;" WindowChrome.IsHitTestVisibleInChrome="True" Click="OnMinimizeButtonClicked" Style="{StaticResource MenuButtonStyle}"/>
                    <Button Content="&#xE739;" WindowChrome.IsHitTestVisibleInChrome="True" Click="OnMaximizeClicked">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MenuButtonStyle}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, ElementName=RootWindow}" Value="Maximized">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="&#xE923;" WindowChrome.IsHitTestVisibleInChrome="True" Click="OnRestoreButtonClicked">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MenuButtonStyle}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, ElementName=RootWindow}" Value="Maximized">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="&#xE106;" WindowChrome.IsHitTestVisibleInChrome="True" Click="OnCloseButtonClicked" Style="{StaticResource CloseMenuButtonStyle}"/>
                </StackPanel>
                <TextBlock Text="PlanOrd" Foreground="White" Margin="15"/>
            </DockPanel>
        </Border>

        <DockPanel Grid.Column="0" Grid.Row="1" Background="#FFE1E9EC">
            <DockPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="#FF499DF4"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="#FFD2DBDB"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Padding="15"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF76B6F8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF277BD3"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Resources>
            <Button DockPanel.Dock="Bottom" Content="Ajouter après" Margin="10,3,10,10" />
            <Button DockPanel.Dock="Bottom" Content="Ajouter avant" Margin="10,3" />
            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="Border">
                        <Setter Property="Padding" Value="15,10,8,10"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="10,0,0,0"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFC9D7DC"/>
                                <Setter Property="BorderBrush" Value="#FFB4C8CF"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>
                <Border Margin="10,10,7,3" Padding="5,0,0,7" BorderThickness="0,0,0,1" Background="Transparent" BorderBrush="#FFB4C8CF">
                    <TextBlock Text="Ajout d'une tâche" FontSize="14" FontWeight="Bold"/>
                </Border>

                <Border>
                    <TextBlock Text="Nouvelle victime"/>
                </Border>
                <Border Background="#FF546C78" Padding="25,10,8,10" BorderThickness="10,0,0,0" BorderBrush="#FF394B55">
                    <TextBlock Text="Nouvelle victime" Foreground="White" FontWeight="SemiBold"/>
                </Border>
                <Border>
                    <TextBlock Text="Fracture du poignet"/>
                </Border>
                <Border>
                    <TextBlock Text="Deplacer la victime"/>
                </Border>
                <Border>
                    <TextBlock Text="Injection"/>
                </Border>
                <Border>
                    <TextBlock Text="Nouvelle tache"/>
                </Border>
            </StackPanel>
        </DockPanel>
        <local:PlanOrdGraphControl Grid.Column="1" Grid.Row="1" Panel.ZIndex="-500"/>
        <!--<DockPanel Grid.Column="1" Grid.Row="1">
            <DockPanel DockPanel.Dock="Bottom">
                <Button DockPanel.Dock="Right" Content="Supprimer" Padding="13" FontSize="15" Margin="3" />
                <TextBlock Text=" "/>
            </DockPanel>
            <TextBlock Text=" "/>
        </DockPanel>-->
        <DockPanel Grid.Column="2" Grid.Row="1"
                   Background="#FFE1E9EC">
            <DockPanel.Resources>
                <Style TargetType="{x:Type Button}" x:Key="ButStyle">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="#FF499DF4"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="#FFD2DBDB"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Padding="15"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF76B6F8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF277BD3"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Resources>
            <Button DockPanel.Dock="Bottom" Content="Recalculer" Style="{StaticResource ButStyle}" Margin="10,3,10,10" />
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Margin="10,10,7,3" Padding="5,0,0,7" BorderThickness="0,0,0,1" Background="Transparent" BorderBrush="#FFB4C8CF">
                    <TextBlock Text="Caractéristiques" FontSize="14" FontWeight="Bold"/>
                </Border>
                <StackPanel Grid.Row="1">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Margin" Value="10,4"/>
                            <Setter Property="Padding" Value="5,7,5,7"/>
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="BorderThickness" Value="4,0,0,0"/>
                            <Setter Property="CornerRadius" Value="3"/>
                        </Style>
                    </StackPanel.Resources>
                    <Border BorderBrush="Blue">
                        <DockPanel>
                            <resources:IntSpinner DockPanel.Dock="Right" Value="3" MaxWidth="38"/>
                            <TextBlock Text="Difficulté"/>
                        </DockPanel>
                    </Border>
                    <Border BorderBrush="Red">
                        <DockPanel>
                            <resources:IntSpinner DockPanel.Dock="Right" Value="5" MaxWidth="38"/>
                            <TextBlock Text="Criticité"/>
                        </DockPanel>
                    </Border>
                    <Border BorderBrush="DarkCyan">
                        <DockPanel>
                            <resources:IntSpinner DockPanel.Dock="Right" MaxWidth="38"/>
                            <TextBlock Text="Another one"/>
                        </DockPanel>
                    </Border>
                    <Border BorderBrush="Green">
                        <DockPanel>
                            <resources:IntSpinner DockPanel.Dock="Right" Value="10" MaxWidth="38"/>
                            <TextBlock Text="Another one"/>
                        </DockPanel>
                    </Border>
                    <Border BorderBrush="YellowGreen">
                        <DockPanel>
                            <resources:IntSpinner DockPanel.Dock="Right" MaxWidth="38"/>
                            <TextBlock Text="Another one"/>
                        </DockPanel>
                    </Border>
                </StackPanel>
                <Border Grid.Row="2" Margin="10,10,7,3" Padding="5,0,0,7" BorderThickness="0,0,0,1" Background="Transparent" BorderBrush="#FFB4C8CF">
                    <TextBlock Text="Notions" FontSize="14" FontWeight="Bold"/>
                </Border>
                <!--<DockPanel DockPanel.Dock="Bottom" Margin="0,3,3,10">
                    <Button DockPanel.Dock="Right" Content="Ajouter" FontSize="15" Padding="5"/>
                    <ComboBox Margin="0,0,3,0"/>
                </DockPanel>-->
            </Grid>
        </DockPanel>
    </Grid>
</Window>
